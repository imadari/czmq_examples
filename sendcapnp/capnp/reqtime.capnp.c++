// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: reqtime.capnp

#include "reqtime.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<34> b_b0ea21a411e81717 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     23,  23, 232,  17, 164,  33, 234, 176,
     14,   0,   0,   0,   1,   0,   0,   0,
    200,  70, 224,  19,  76,  18, 121, 245,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 116, 105, 109, 101,  46,
     99,  97, 112, 110, 112,  58,  82, 101,
    113, 117, 101, 115, 116,  84, 105, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 122, 111, 110, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b0ea21a411e81717 = b_b0ea21a411e81717.words;
#if !CAPNP_LITE
static const uint16_t m_b0ea21a411e81717[] = {0};
static const uint16_t i_b0ea21a411e81717[] = {0};
const ::capnp::_::RawSchema s_b0ea21a411e81717 = {
  0xb0ea21a411e81717, b_b0ea21a411e81717.words, 34, nullptr, m_b0ea21a411e81717,
  0, 1, i_b0ea21a411e81717, nullptr, nullptr, { &s_b0ea21a411e81717, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_c8f4b8d5ef2b5c5d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93,  92,  43, 239, 213, 184, 244, 200,
     14,   0,   0,   0,   1,   0,   1,   0,
    200,  70, 224,  19,  76,  18, 121, 245,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 113, 116, 105, 109, 101,  46,
     99,  97, 112, 110, 112,  58,  82, 101,
    115, 112, 111, 110, 115, 101,  84, 105,
    109, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 101,  99,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 115, 101,  99,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c8f4b8d5ef2b5c5d = b_c8f4b8d5ef2b5c5d.words;
#if !CAPNP_LITE
static const uint16_t m_c8f4b8d5ef2b5c5d[] = {1, 0};
static const uint16_t i_c8f4b8d5ef2b5c5d[] = {0, 1};
const ::capnp::_::RawSchema s_c8f4b8d5ef2b5c5d = {
  0xc8f4b8d5ef2b5c5d, b_c8f4b8d5ef2b5c5d.words, 48, nullptr, m_c8f4b8d5ef2b5c5d,
  0, 2, i_c8f4b8d5ef2b5c5d, nullptr, nullptr, { &s_c8f4b8d5ef2b5c5d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// RequestTime
#ifndef _MSC_VER
constexpr uint16_t RequestTime::_capnpPrivate::dataWordSize;
constexpr uint16_t RequestTime::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind RequestTime::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* RequestTime::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* RequestTime::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ResponseTime
#ifndef _MSC_VER
constexpr uint16_t ResponseTime::_capnpPrivate::dataWordSize;
constexpr uint16_t ResponseTime::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind ResponseTime::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ResponseTime::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ResponseTime::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



